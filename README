Introduction
Media Brute's purpose is to automatically collect, compile, minify, and cache all JS and CSS for a Django project. It then has context processors that allow that minified JS and CSS to be referenced in the templates.

It is great for projects where only 1 js and/or css file needs to be cached for the entire site/project.

important Configurations
At the very least, these two settings should be added to your django settings file.
CSS_DIR
	- Main CSS directory inside MEDIA_ROOT, 
	- Defaults to "css"
JS_DIR 
	-  Main JS directory inside MEDIA_ROOT
	- Defaults to "js"


Additional Configurations
	APP_CSS : where app-specific CSS will sit in app directory
		e.g. : "media/css", 
		defaults to "css"

	APP_JS : where app-specific JS will sit in app directory
		e.g. : "media/js", 
		defaults to "css"

	CSS_TOP_FILES : the list of files that should go at the top of the final CSS file
		i.e. : things that should be overrideable
		e.g. css resets, other standard sheets
	
	CSS_BOTTOM_FILES : the list of filenames that should go at the bottom of the final CSS file
		i.e. : things that should have "the final say"
		e.g. files with lots of media queries for responsive design

Available:
Context Processors:
	mediabrute.context_processors.mini_media
	mediabrute.context_processors.mini_js
	mediabrute.context_processors.mini_css
Management commands:
	manage.py mediabrute_clearcache

API
from mediabrute import api

api.clear_cache() : clears cached js and css files
api.get_app_css_dirs() : get a list of css directories found inside apps (not inside the main css directory)
api.get_app_js_dirs() : get a list of js directories found inside apps (not inside the main js directory)
api.get_main_js_dir() : get the main js directory that mediabrute will pull from (this is the one inside MEDIA_ROOT)
api.get_main_css_dir() : get the main css directory that mediabrute will pull from (this is the one inside MEDIA_ROOT)


	